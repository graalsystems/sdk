/*
 * Tenant API
 *
 * Tenant API
 *
 * API version: 0.0.1
 * Contact: abc@layer.fr
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graalsystems/sdk

import (
	"encoding/json"
)

// WorkflowPage typed Page
type WorkflowPage struct {
	Number *int32 `json:"number,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Content *[]Workflow `json:"content,omitempty"`
}

// NewWorkflowPage instantiates a new WorkflowPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowPage() *WorkflowPage {
	this := WorkflowPage{}
	return &this
}

// NewWorkflowPageWithDefaults instantiates a new WorkflowPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowPageWithDefaults() *WorkflowPage {
	this := WorkflowPage{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *WorkflowPage) GetNumber() int32 {
	if o == nil || o.Number == nil {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowPage) GetNumberOk() (*int32, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *WorkflowPage) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *WorkflowPage) SetNumber(v int32) {
	o.Number = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *WorkflowPage) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowPage) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *WorkflowPage) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *WorkflowPage) SetSize(v int32) {
	o.Size = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *WorkflowPage) GetContent() []Workflow {
	if o == nil || o.Content == nil {
		var ret []Workflow
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowPage) GetContentOk() (*[]Workflow, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *WorkflowPage) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given []Workflow and assigns it to the Content field.
func (o *WorkflowPage) SetContent(v []Workflow) {
	o.Content = &v
}

func (o WorkflowPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowPage struct {
	value *WorkflowPage
	isSet bool
}

func (v NullableWorkflowPage) Get() *WorkflowPage {
	return v.value
}

func (v *NullableWorkflowPage) Set(val *WorkflowPage) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowPage) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowPage(val *WorkflowPage) *NullableWorkflowPage {
	return &NullableWorkflowPage{value: val, isSet: true}
}

func (v NullableWorkflowPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


