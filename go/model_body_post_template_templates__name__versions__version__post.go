/*
Tenant API

Tenant API

API version: 0.0.1
Contact: abc@layer.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graalsystems

import (
	"encoding/json"
	"fmt"
)

// checks if the BodyPostTemplateTemplatesNameVersionsVersionPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyPostTemplateTemplatesNameVersionsVersionPost{}

// BodyPostTemplateTemplatesNameVersionsVersionPost struct for BodyPostTemplateTemplatesNameVersionsVersionPost
type BodyPostTemplateTemplatesNameVersionsVersionPost struct {
	Template string `json:"template"`
	Metadata Metadata `json:"metadata"`
}

type _BodyPostTemplateTemplatesNameVersionsVersionPost BodyPostTemplateTemplatesNameVersionsVersionPost

// NewBodyPostTemplateTemplatesNameVersionsVersionPost instantiates a new BodyPostTemplateTemplatesNameVersionsVersionPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyPostTemplateTemplatesNameVersionsVersionPost(template string, metadata Metadata) *BodyPostTemplateTemplatesNameVersionsVersionPost {
	this := BodyPostTemplateTemplatesNameVersionsVersionPost{}
	this.Template = template
	this.Metadata = metadata
	return &this
}

// NewBodyPostTemplateTemplatesNameVersionsVersionPostWithDefaults instantiates a new BodyPostTemplateTemplatesNameVersionsVersionPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyPostTemplateTemplatesNameVersionsVersionPostWithDefaults() *BodyPostTemplateTemplatesNameVersionsVersionPost {
	this := BodyPostTemplateTemplatesNameVersionsVersionPost{}
	return &this
}

// GetTemplate returns the Template field value
func (o *BodyPostTemplateTemplatesNameVersionsVersionPost) GetTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *BodyPostTemplateTemplatesNameVersionsVersionPost) GetTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *BodyPostTemplateTemplatesNameVersionsVersionPost) SetTemplate(v string) {
	o.Template = v
}

// GetMetadata returns the Metadata field value
func (o *BodyPostTemplateTemplatesNameVersionsVersionPost) GetMetadata() Metadata {
	if o == nil {
		var ret Metadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *BodyPostTemplateTemplatesNameVersionsVersionPost) GetMetadataOk() (*Metadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *BodyPostTemplateTemplatesNameVersionsVersionPost) SetMetadata(v Metadata) {
	o.Metadata = v
}

func (o BodyPostTemplateTemplatesNameVersionsVersionPost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyPostTemplateTemplatesNameVersionsVersionPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["template"] = o.Template
	toSerialize["metadata"] = o.Metadata
	return toSerialize, nil
}

func (o *BodyPostTemplateTemplatesNameVersionsVersionPost) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"template",
		"metadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBodyPostTemplateTemplatesNameVersionsVersionPost := _BodyPostTemplateTemplatesNameVersionsVersionPost{}

	err = json.Unmarshal(bytes, &varBodyPostTemplateTemplatesNameVersionsVersionPost)

	if err != nil {
		return err
	}

	*o = BodyPostTemplateTemplatesNameVersionsVersionPost(varBodyPostTemplateTemplatesNameVersionsVersionPost)

	return err
}

type NullableBodyPostTemplateTemplatesNameVersionsVersionPost struct {
	value *BodyPostTemplateTemplatesNameVersionsVersionPost
	isSet bool
}

func (v NullableBodyPostTemplateTemplatesNameVersionsVersionPost) Get() *BodyPostTemplateTemplatesNameVersionsVersionPost {
	return v.value
}

func (v *NullableBodyPostTemplateTemplatesNameVersionsVersionPost) Set(val *BodyPostTemplateTemplatesNameVersionsVersionPost) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyPostTemplateTemplatesNameVersionsVersionPost) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyPostTemplateTemplatesNameVersionsVersionPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyPostTemplateTemplatesNameVersionsVersionPost(val *BodyPostTemplateTemplatesNameVersionsVersionPost) *NullableBodyPostTemplateTemplatesNameVersionsVersionPost {
	return &NullableBodyPostTemplateTemplatesNameVersionsVersionPost{value: val, isSet: true}
}

func (v NullableBodyPostTemplateTemplatesNameVersionsVersionPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyPostTemplateTemplatesNameVersionsVersionPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


