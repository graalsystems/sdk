/*
 * Tenant API
 *
 * Tenant API
 *
 * API version: 0.0.1
 * Contact: abc@layer.fr
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// ExternalPaymentMethod struct for ExternalPaymentMethod
type ExternalPaymentMethod struct {
	PaymentMethod
	Type *string `json:"type,omitempty"`
	Reference *string `json:"reference,omitempty"`
	PaymentMethod *PaymentMethod `json:"payment_method,omitempty"`
}

// NewExternalPaymentMethod instantiates a new ExternalPaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalPaymentMethod() *ExternalPaymentMethod {
	this := ExternalPaymentMethod{}
	var type_ string = "external"
	this.Type = &type_
	return &this
}

// NewExternalPaymentMethodWithDefaults instantiates a new ExternalPaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalPaymentMethodWithDefaults() *ExternalPaymentMethod {
	this := ExternalPaymentMethod{}
	var type_ string = "external"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ExternalPaymentMethod) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalPaymentMethod) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ExternalPaymentMethod) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ExternalPaymentMethod) SetType(v string) {
	o.Type = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *ExternalPaymentMethod) GetReference() string {
	if o == nil || o.Reference == nil {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalPaymentMethod) GetReferenceOk() (*string, bool) {
	if o == nil || o.Reference == nil {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *ExternalPaymentMethod) HasReference() bool {
	if o != nil && o.Reference != nil {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *ExternalPaymentMethod) SetReference(v string) {
	o.Reference = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *ExternalPaymentMethod) GetPaymentMethod() PaymentMethod {
	if o == nil || o.PaymentMethod == nil {
		var ret PaymentMethod
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalPaymentMethod) GetPaymentMethodOk() (*PaymentMethod, bool) {
	if o == nil || o.PaymentMethod == nil {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *ExternalPaymentMethod) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod != nil {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given PaymentMethod and assigns it to the PaymentMethod field.
func (o *ExternalPaymentMethod) SetPaymentMethod(v PaymentMethod) {
	o.PaymentMethod = &v
}

func (o ExternalPaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedPaymentMethod, errPaymentMethod := json.Marshal(o.PaymentMethod)
	if errPaymentMethod != nil {
		return []byte{}, errPaymentMethod
	}
	errPaymentMethod = json.Unmarshal([]byte(serializedPaymentMethod), &toSerialize)
	if errPaymentMethod != nil {
		return []byte{}, errPaymentMethod
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Reference != nil {
		toSerialize["reference"] = o.Reference
	}
	if o.PaymentMethod != nil {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	return json.Marshal(toSerialize)
}

type NullableExternalPaymentMethod struct {
	value *ExternalPaymentMethod
	isSet bool
}

func (v NullableExternalPaymentMethod) Get() *ExternalPaymentMethod {
	return v.value
}

func (v *NullableExternalPaymentMethod) Set(val *ExternalPaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalPaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalPaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalPaymentMethod(val *ExternalPaymentMethod) *NullableExternalPaymentMethod {
	return &NullableExternalPaymentMethod{value: val, isSet: true}
}

func (v NullableExternalPaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalPaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


