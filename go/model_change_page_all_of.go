/*
Tenant API

Tenant API

API version: 0.0.1
Contact: abc@layer.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graalsystems

import (
	"encoding/json"
)

// ChangePageAllOf struct for ChangePageAllOf
type ChangePageAllOf struct {
	Content *[]Change `json:"content,omitempty"`
}

// NewChangePageAllOf instantiates a new ChangePageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangePageAllOf() *ChangePageAllOf {
	this := ChangePageAllOf{}
	return &this
}

// NewChangePageAllOfWithDefaults instantiates a new ChangePageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangePageAllOfWithDefaults() *ChangePageAllOf {
	this := ChangePageAllOf{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ChangePageAllOf) GetContent() []Change {
	if o == nil || o.Content == nil {
		var ret []Change
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangePageAllOf) GetContentOk() (*[]Change, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ChangePageAllOf) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given []Change and assigns it to the Content field.
func (o *ChangePageAllOf) SetContent(v []Change) {
	o.Content = &v
}

func (o ChangePageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableChangePageAllOf struct {
	value *ChangePageAllOf
	isSet bool
}

func (v NullableChangePageAllOf) Get() *ChangePageAllOf {
	return v.value
}

func (v *NullableChangePageAllOf) Set(val *ChangePageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableChangePageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableChangePageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangePageAllOf(val *ChangePageAllOf) *NullableChangePageAllOf {
	return &NullableChangePageAllOf{value: val, isSet: true}
}

func (v NullableChangePageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangePageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


