/*
Tenant API

Tenant API

API version: 0.0.1
Contact: abc@layer.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graalsystems

import (
	"encoding/json"
)

// checks if the Follow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Follow{}

// Follow Object Follow.
type Follow struct {
	TenantId *string `json:"tenant_id,omitempty"`
	Resource *Resource1 `json:"resource,omitempty"`
	Follower *User1 `json:"follower,omitempty"`
}

// NewFollow instantiates a new Follow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFollow() *Follow {
	this := Follow{}
	return &this
}

// NewFollowWithDefaults instantiates a new Follow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFollowWithDefaults() *Follow {
	this := Follow{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *Follow) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Follow) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *Follow) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *Follow) SetTenantId(v string) {
	o.TenantId = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *Follow) GetResource() Resource1 {
	if o == nil || IsNil(o.Resource) {
		var ret Resource1
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Follow) GetResourceOk() (*Resource1, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *Follow) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given Resource1 and assigns it to the Resource field.
func (o *Follow) SetResource(v Resource1) {
	o.Resource = &v
}

// GetFollower returns the Follower field value if set, zero value otherwise.
func (o *Follow) GetFollower() User1 {
	if o == nil || IsNil(o.Follower) {
		var ret User1
		return ret
	}
	return *o.Follower
}

// GetFollowerOk returns a tuple with the Follower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Follow) GetFollowerOk() (*User1, bool) {
	if o == nil || IsNil(o.Follower) {
		return nil, false
	}
	return o.Follower, true
}

// HasFollower returns a boolean if a field has been set.
func (o *Follow) HasFollower() bool {
	if o != nil && !IsNil(o.Follower) {
		return true
	}

	return false
}

// SetFollower gets a reference to the given User1 and assigns it to the Follower field.
func (o *Follow) SetFollower(v User1) {
	o.Follower = &v
}

func (o Follow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Follow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Follower) {
		toSerialize["follower"] = o.Follower
	}
	return toSerialize, nil
}

type NullableFollow struct {
	value *Follow
	isSet bool
}

func (v NullableFollow) Get() *Follow {
	return v.value
}

func (v *NullableFollow) Set(val *Follow) {
	v.value = val
	v.isSet = true
}

func (v NullableFollow) IsSet() bool {
	return v.isSet
}

func (v *NullableFollow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFollow(val *Follow) *NullableFollow {
	return &NullableFollow{value: val, isSet: true}
}

func (v NullableFollow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFollow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


