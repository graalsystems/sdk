/*
Tenant API

Tenant API

API version: 0.0.1
Contact: abc@layer.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graalsystems

import (
	"encoding/json"
)

// GraphPageAllOf struct for GraphPageAllOf
type GraphPageAllOf struct {
	Content *[]Graph `json:"content,omitempty"`
}

// NewGraphPageAllOf instantiates a new GraphPageAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphPageAllOf() *GraphPageAllOf {
	this := GraphPageAllOf{}
	return &this
}

// NewGraphPageAllOfWithDefaults instantiates a new GraphPageAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphPageAllOfWithDefaults() *GraphPageAllOf {
	this := GraphPageAllOf{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *GraphPageAllOf) GetContent() []Graph {
	if o == nil || o.Content == nil {
		var ret []Graph
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphPageAllOf) GetContentOk() (*[]Graph, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *GraphPageAllOf) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given []Graph and assigns it to the Content field.
func (o *GraphPageAllOf) SetContent(v []Graph) {
	o.Content = &v
}

func (o GraphPageAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableGraphPageAllOf struct {
	value *GraphPageAllOf
	isSet bool
}

func (v NullableGraphPageAllOf) Get() *GraphPageAllOf {
	return v.value
}

func (v *NullableGraphPageAllOf) Set(val *GraphPageAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphPageAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphPageAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphPageAllOf(val *GraphPageAllOf) *NullableGraphPageAllOf {
	return &NullableGraphPageAllOf{value: val, isSet: true}
}

func (v NullableGraphPageAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphPageAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


