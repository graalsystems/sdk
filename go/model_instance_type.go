/*
Tenant API

Tenant API

API version: 0.0.1
Contact: abc@layer.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the InstanceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceType{}

// InstanceType struct for InstanceType
type InstanceType struct {
	Id *string `json:"id,omitempty"`
	Generation *float32 `json:"generation,omitempty"`
	Family *string `json:"family,omitempty"`
	Cpus *float32 `json:"cpus,omitempty"`
	Memory *string `json:"memory,omitempty"`
	Storage *string `json:"storage,omitempty"`
	Gpus *float32 `json:"gpus,omitempty"`
	GpuMemory *string `json:"gpu_memory,omitempty"`
}

// NewInstanceType instantiates a new InstanceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceType() *InstanceType {
	this := InstanceType{}
	return &this
}

// NewInstanceTypeWithDefaults instantiates a new InstanceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceTypeWithDefaults() *InstanceType {
	this := InstanceType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceType) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InstanceType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InstanceType) SetId(v string) {
	o.Id = &v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *InstanceType) GetGeneration() float32 {
	if o == nil || IsNil(o.Generation) {
		var ret float32
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetGenerationOk() (*float32, bool) {
	if o == nil || IsNil(o.Generation) {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *InstanceType) HasGeneration() bool {
	if o != nil && !IsNil(o.Generation) {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given float32 and assigns it to the Generation field.
func (o *InstanceType) SetGeneration(v float32) {
	o.Generation = &v
}

// GetFamily returns the Family field value if set, zero value otherwise.
func (o *InstanceType) GetFamily() string {
	if o == nil || IsNil(o.Family) {
		var ret string
		return ret
	}
	return *o.Family
}

// GetFamilyOk returns a tuple with the Family field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.Family) {
		return nil, false
	}
	return o.Family, true
}

// HasFamily returns a boolean if a field has been set.
func (o *InstanceType) HasFamily() bool {
	if o != nil && !IsNil(o.Family) {
		return true
	}

	return false
}

// SetFamily gets a reference to the given string and assigns it to the Family field.
func (o *InstanceType) SetFamily(v string) {
	o.Family = &v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *InstanceType) GetCpus() float32 {
	if o == nil || IsNil(o.Cpus) {
		var ret float32
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetCpusOk() (*float32, bool) {
	if o == nil || IsNil(o.Cpus) {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *InstanceType) HasCpus() bool {
	if o != nil && !IsNil(o.Cpus) {
		return true
	}

	return false
}

// SetCpus gets a reference to the given float32 and assigns it to the Cpus field.
func (o *InstanceType) SetCpus(v float32) {
	o.Cpus = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *InstanceType) GetMemory() string {
	if o == nil || IsNil(o.Memory) {
		var ret string
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetMemoryOk() (*string, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *InstanceType) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given string and assigns it to the Memory field.
func (o *InstanceType) SetMemory(v string) {
	o.Memory = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *InstanceType) GetStorage() string {
	if o == nil || IsNil(o.Storage) {
		var ret string
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetStorageOk() (*string, bool) {
	if o == nil || IsNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *InstanceType) HasStorage() bool {
	if o != nil && !IsNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given string and assigns it to the Storage field.
func (o *InstanceType) SetStorage(v string) {
	o.Storage = &v
}

// GetGpus returns the Gpus field value if set, zero value otherwise.
func (o *InstanceType) GetGpus() float32 {
	if o == nil || IsNil(o.Gpus) {
		var ret float32
		return ret
	}
	return *o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetGpusOk() (*float32, bool) {
	if o == nil || IsNil(o.Gpus) {
		return nil, false
	}
	return o.Gpus, true
}

// HasGpus returns a boolean if a field has been set.
func (o *InstanceType) HasGpus() bool {
	if o != nil && !IsNil(o.Gpus) {
		return true
	}

	return false
}

// SetGpus gets a reference to the given float32 and assigns it to the Gpus field.
func (o *InstanceType) SetGpus(v float32) {
	o.Gpus = &v
}

// GetGpuMemory returns the GpuMemory field value if set, zero value otherwise.
func (o *InstanceType) GetGpuMemory() string {
	if o == nil || IsNil(o.GpuMemory) {
		var ret string
		return ret
	}
	return *o.GpuMemory
}

// GetGpuMemoryOk returns a tuple with the GpuMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetGpuMemoryOk() (*string, bool) {
	if o == nil || IsNil(o.GpuMemory) {
		return nil, false
	}
	return o.GpuMemory, true
}

// HasGpuMemory returns a boolean if a field has been set.
func (o *InstanceType) HasGpuMemory() bool {
	if o != nil && !IsNil(o.GpuMemory) {
		return true
	}

	return false
}

// SetGpuMemory gets a reference to the given string and assigns it to the GpuMemory field.
func (o *InstanceType) SetGpuMemory(v string) {
	o.GpuMemory = &v
}

func (o InstanceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Generation) {
		toSerialize["generation"] = o.Generation
	}
	if !IsNil(o.Family) {
		toSerialize["family"] = o.Family
	}
	if !IsNil(o.Cpus) {
		toSerialize["cpus"] = o.Cpus
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	if !IsNil(o.Gpus) {
		toSerialize["gpus"] = o.Gpus
	}
	if !IsNil(o.GpuMemory) {
		toSerialize["gpu_memory"] = o.GpuMemory
	}
	return toSerialize, nil
}

type NullableInstanceType struct {
	value *InstanceType
	isSet bool
}

func (v NullableInstanceType) Get() *InstanceType {
	return v.value
}

func (v *NullableInstanceType) Set(val *InstanceType) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceType) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceType(val *InstanceType) *NullableInstanceType {
	return &NullableInstanceType{value: val, isSet: true}
}

func (v NullableInstanceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


