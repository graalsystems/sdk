/*
Tenant API

Tenant API

API version: 0.0.1
Contact: abc@layer.fr
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the EnrollmentPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrollmentPage{}

// EnrollmentPage typed Page
type EnrollmentPage struct {
	Number *int32 `json:"number,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Content []Enrollment `json:"content,omitempty"`
}

// NewEnrollmentPage instantiates a new EnrollmentPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrollmentPage() *EnrollmentPage {
	this := EnrollmentPage{}
	return &this
}

// NewEnrollmentPageWithDefaults instantiates a new EnrollmentPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrollmentPageWithDefaults() *EnrollmentPage {
	this := EnrollmentPage{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *EnrollmentPage) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentPage) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *EnrollmentPage) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *EnrollmentPage) SetNumber(v int32) {
	o.Number = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *EnrollmentPage) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentPage) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *EnrollmentPage) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *EnrollmentPage) SetSize(v int32) {
	o.Size = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *EnrollmentPage) GetContent() []Enrollment {
	if o == nil || IsNil(o.Content) {
		var ret []Enrollment
		return ret
	}
	return o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrollmentPage) GetContentOk() ([]Enrollment, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *EnrollmentPage) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given []Enrollment and assigns it to the Content field.
func (o *EnrollmentPage) SetContent(v []Enrollment) {
	o.Content = v
}

func (o EnrollmentPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrollmentPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	return toSerialize, nil
}

type NullableEnrollmentPage struct {
	value *EnrollmentPage
	isSet bool
}

func (v NullableEnrollmentPage) Get() *EnrollmentPage {
	return v.value
}

func (v *NullableEnrollmentPage) Set(val *EnrollmentPage) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrollmentPage) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrollmentPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrollmentPage(val *EnrollmentPage) *NullableEnrollmentPage {
	return &NullableEnrollmentPage{value: val, isSet: true}
}

func (v NullableEnrollmentPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrollmentPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


