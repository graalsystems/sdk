/*
 * Tenant API
 *
 * Tenant API
 *
 * API version: 0.0.1
 * Contact: abc@layer.fr
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// IssueDetailsAllOf struct for IssueDetailsAllOf
type IssueDetailsAllOf struct {
	Type *string `json:"type,omitempty"`
	ResourceType *string `json:"resource_type,omitempty"`
	ResourceId *string `json:"resource_id,omitempty"`
	Severity *string `json:"severity,omitempty"`
}

// NewIssueDetailsAllOf instantiates a new IssueDetailsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueDetailsAllOf() *IssueDetailsAllOf {
	this := IssueDetailsAllOf{}
	var type_ string = "issue"
	this.Type = &type_
	return &this
}

// NewIssueDetailsAllOfWithDefaults instantiates a new IssueDetailsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueDetailsAllOfWithDefaults() *IssueDetailsAllOf {
	this := IssueDetailsAllOf{}
	var type_ string = "issue"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IssueDetailsAllOf) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueDetailsAllOf) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IssueDetailsAllOf) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IssueDetailsAllOf) SetType(v string) {
	o.Type = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *IssueDetailsAllOf) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueDetailsAllOf) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *IssueDetailsAllOf) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *IssueDetailsAllOf) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *IssueDetailsAllOf) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueDetailsAllOf) GetResourceIdOk() (*string, bool) {
	if o == nil || o.ResourceId == nil {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *IssueDetailsAllOf) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *IssueDetailsAllOf) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *IssueDetailsAllOf) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueDetailsAllOf) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *IssueDetailsAllOf) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *IssueDetailsAllOf) SetSeverity(v string) {
	o.Severity = &v
}

func (o IssueDetailsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ResourceType != nil {
		toSerialize["resource_type"] = o.ResourceType
	}
	if o.ResourceId != nil {
		toSerialize["resource_id"] = o.ResourceId
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	return json.Marshal(toSerialize)
}

type NullableIssueDetailsAllOf struct {
	value *IssueDetailsAllOf
	isSet bool
}

func (v NullableIssueDetailsAllOf) Get() *IssueDetailsAllOf {
	return v.value
}

func (v *NullableIssueDetailsAllOf) Set(val *IssueDetailsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueDetailsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueDetailsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueDetailsAllOf(val *IssueDetailsAllOf) *NullableIssueDetailsAllOf {
	return &NullableIssueDetailsAllOf{value: val, isSet: true}
}

func (v NullableIssueDetailsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueDetailsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


